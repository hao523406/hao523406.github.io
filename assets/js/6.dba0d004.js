(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{205:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"javase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javase"}},[t._v("#")]),t._v(" JavaSE")]),t._v(" "),s("h2",{attrs:{id:"_1-入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-入门"}},[t._v("#")]),t._v(" 1.入门")]),t._v(" "),s("h3",{attrs:{id:"基本概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概述"}},[t._v("#")]),t._v(" 基本概述")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Java是"),s("strong",[t._v("SUN")]),t._v("(Stanford University Network，斯坦福大学网络公司 ) 1995年推出的一门高级编程语言。")])]),t._v(" "),s("li",[s("p",[t._v("Java是一个纯粹的"),s("strong",[t._v("面向对象")]),t._v("的程序设计语言，它继承了C++语言面向对象技术的核心。Java舍弃了C语言中容易引起错误的指针（以引用取代）、运算符重载、多重继承（以接口取代）等特性，增加了垃圾回收器功能用于回收不再被引用的对象所占据的内存空间。JDK1.5又引入了泛型编程、枚举、不定长参数、自动装/拆箱。")])]),t._v(" "),s("li",[s("p",[t._v("Java之父：James Gosling。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/e9381a5d8f354a75a736f5f462a060ff.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("发展简史：")]),t._v(" "),s("ul",[s("li",[t._v("1991年 Green项目，开发语言最初命名为Oak (橡树)")]),t._v(" "),s("li",[t._v("1994年，开发组意识到Oak 非常适合于互联网")]),t._v(" "),s("li",[t._v("1996年，发布JDK 1.0，约8.3万个网页应用Java技术来制作")]),t._v(" "),s("li",[t._v("1997年，发布JDK 1.1，JavaOne会议召开，创当时全球同类会议规模之最")]),t._v(" "),s("li",[t._v("1998年，发布JDK 1.2，同年发布企业平台J2EE")]),t._v(" "),s("li",[t._v("1999年，Java分成J2SE、J2EE和J2ME，JSP/Servlet技术诞生")]),t._v(" "),s("li",[t._v("2004年，发布里程碑式版本：JDK 1.5，为突出此版本的重要性，更名为JDK 5.0")]),t._v(" "),s("li",[t._v("2005年，J2SE -> JavaSE，J2EE -> JavaEE，J2ME -> JavaME")]),t._v(" "),s("li",[t._v("2009年，Oracle公司收购SUN，交易价格74亿美元")]),t._v(" "),s("li",[t._v("2011年，发布JDK 7.0")]),t._v(" "),s("li",[t._v("2014年，发布JDK 8.0，是继JDK 5.0以来变化最大的版本")]),t._v(" "),s("li",[t._v("2017年，发布JDK 9.0，最大限度实现模块化")]),t._v(" "),s("li",[t._v("......")])])]),t._v(" "),s("li",[s("p",[t._v("Java技术体系平台")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("**Java SE **(Java Standard Edition)：标准版")]),t._v(" "),s("blockquote",[s("p",[t._v("支持面向桌面级应用（如Windows下的应用程序）的Java平台，提供了完整的Java核 心API。")])])]),t._v(" "),s("li",[s("p",[t._v("**Java EE **(Java Enterprise Edition)：企业版")]),t._v(" "),s("blockquote",[s("p",[t._v("为开发企业环境下的应用程序提供的一套解决方案。该技术体系中包含的技术如Servlet 、Jsp等，")]),t._v(" "),s("p",[t._v("主要针对于Web应用程序开发。")])])]),t._v(" "),s("li",[s("p",[t._v("Java ME (Java Micro Edition)：小型版")]),t._v(" "),s("blockquote",[s("p",[t._v("支持Java程序运行在移动终端上的平台，对Java API有所精简，并加入了针对移动终端的支持。")])])]),t._v(" "),s("li",[s("p",[t._v("Java Card")]),t._v(" "),s("blockquote",[s("p",[t._v("支持一些Java小程序（Applets）运行在小内存设备（如智能卡）上的平台。")])])])])])]),t._v(" "),s("h3",{attrs:{id:"java运行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java运行机制"}},[t._v("#")]),t._v(" Java运行机制")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Java特点：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("面向对象")])]),t._v(" "),s("blockquote",[s("p",[t._v("基本概念：类、对象。")]),t._v(" "),s("p",[t._v("三大特性：封装、继承、多态。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("健壮性")])]),t._v(" "),s("blockquote",[s("p",[t._v("吸收了C/C++语言的优点，但去掉了其影响程序健壮性的部分（如指针、内存的申请与释放等），提供了一个相对安全的内存管理和访问机制。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("跨平台性")])]),t._v(" "),s("blockquote",[s("p",[t._v("通过Java语言编写的应用程序在不同的系统平台上都可以运行。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/2741005b44ef4aeea7a823d0ae466fd3.png",alt:""}})]),t._v(" "),s("p",[t._v("因为有了JVM，同一个Java程序在不同的操作系统中都可以执行。实现了Java 程序的跨平台性。")])])])])]),t._v(" "),s("li",[s("p",[t._v("Java核心机制：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("Java虚拟机")]),t._v(" ("),s("strong",[t._v("J")]),t._v("ava "),s("strong",[t._v("V")]),t._v("irtal "),s("strong",[t._v("M")]),t._v("achine)")]),t._v(" "),s("ul",[s("li",[t._v("JVM是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器。")]),t._v(" "),s("li",[t._v("不同的平台，有不同的虚拟机 (JVM是不跨平台的)。只有该平台提供了对应的JVM，java程序才能在此平台上运行。")]),t._v(" "),s("li",[t._v("JVM屏蔽了底层运行平台的差别，实现了“一次编译，到处运行”。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/d90fc121d34043e380675b38d012a6f9.png",alt:""}})])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("垃圾回收机制")]),t._v(" ("),s("strong",[t._v("G")]),t._v("arbage "),s("strong",[t._v("C")]),t._v("ollection)")]),t._v(" "),s("ul",[s("li",[t._v("垃圾回收：回收不再使用的内存空间。")]),t._v(" "),s("li",[t._v("Java消除了程序员回收无用内存空间的责任。它提供一种系统级线程跟踪存储空间的分配情况。并在JVM空闲时，检查并释放那些可被释放的存储空间。")]),t._v(" "),s("li",[t._v("Java程序运行中自动进行垃圾回收，程序员无法精确控制和干预。因此，Java程序还是会出现内存泄漏和内存溢出的问题。")])])])])])]),t._v(" "),s("h3",{attrs:{id:"java环境搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java环境搭建"}},[t._v("#")]),t._v(" Java环境搭建")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/651b4b528ea0473b978a26b23c25f1a8.png",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("JDK = JRE + 开发工具集(javac, java 等工具)")]),t._v(" "),s("p",[t._v("JRE = JVM + JavaSE标准类库")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("JDK")]),t._v(" ("),s("strong",[t._v("J")]),t._v("ava "),s("strong",[t._v("D")]),t._v("evelopment "),s("strong",[t._v("K")]),t._v("it)：Java开发工具包")]),t._v(" "),s("blockquote",[s("p",[t._v("JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。")]),t._v(" "),s("p",[t._v("所以安装了JDK，就不用在单独安装JRE了。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("JRE")]),t._v(" ("),s("strong",[t._v("J")]),t._v("ava "),s("strong",[t._v("R")]),t._v("untime "),s("strong",[t._v("E")]),t._v("nvironment)：Java运行环境")]),t._v(" "),s("blockquote",[s("p",[t._v("包括Java虚拟机和Java程序所需的核心类库等。")]),t._v(" "),s("p",[t._v("如果想要运行一个开发好的Java程序，只需要JRE即可。")])])]),t._v(" "),s("li",[s("p",[t._v("安装")]),t._v(" "),s("blockquote",[s("p",[t._v("下载JDK，并安装或解压，确定已配置"),s("strong",[t._v("PATH")]),t._v("。")]),t._v(" "),s("p",[t._v("目的：方便在任意路径下使用 javac, java 等命令，不需要再进入jdk目录/bin下。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("PATH")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/a51d52acc4cf47bca35f6d5e3cb46b4c.png",alt:""}})])])]),t._v(" "),s("p",[t._v("为了方便后续的Java工具的使用，我们使用 JAVA_HOME 的方式来配置。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("JAVA_HOME")]),t._v(" + "),s("strong",[t._v("PATH")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/87b109199d5a492c857297551e02bac3.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("检验："),s("code",[t._v("java -version")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/bf424820f0b241adbca52b20c643b74b.png",alt:""}})])])])])])]),t._v(" "),s("h3",{attrs:{id:"hello-world"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[t._v("#")]),t._v(" Hello World")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("实验：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("新建文本，重命名为"),s("code",[t._v("Hello.java")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("编辑内容")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("编译运行")]),t._v(" "),s("blockquote",[s("p",[t._v("编译命令："),s("code",[t._v("javac Hello.java")]),t._v(" (编译Hello.java 回生成 Hello.class)")]),t._v(" "),s("p",[t._v("运行命令："),s("code",[t._v("java Hello")]),t._v(" ("),s("strong",[t._v("注意：运行不带.class后缀名")]),t._v(")")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/73d316a096d84ba7aa44dcc3644a37e2.png",alt:""}})])])])])]),t._v(" "),s("li",[s("p",[t._v("原理：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/e75230f86b9d4017a64b026fe9a15376.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("工具：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("javac：Java程序的编译工具，将 .java文件 编译成 .class(字节码)文件。")])]),t._v(" "),s("li",[s("p",[t._v("java：Java程序的运行工具，运行.class文件 (命令时不带.class后缀)。")])]),t._v(" "),s("li",[s("p",[t._v("JDK默认包含Java开发工具集，也就是javac，java等工具。\n路径：jdk目录/bin")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/32b2f13f27e449a6a7a267ebb30b10fc.png",alt:""}})])])])])]),t._v(" "),s("h3",{attrs:{id:"注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),s("p",[t._v("单行、多行注释：被注释的文字，不会被JVM解释执行。")]),t._v(" "),s("p",[t._v("文档注释：注释内容可以被JDK工具 javadoc 所解析，生成一套以网页文件形式体现的该程序的说明文档。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("单行注释")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("多行注释")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    注释1\n\t注释2\n\t多行注释里面不允许嵌套多行注释，但允许单行注释。\n\t注释3\n */")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("文档注释")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @author HAO\n * @version 1.0\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * main方法\n     * @param args  运行参数\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("javadoc -d doc -encoding UTF-8 Hello.java\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -d\t生成文档目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -encoding\t\t源文件编码")]),t._v("\n")])])]),s("p",[t._v("生成文档，进入文档目录，用浏览器打开 "),s("code",[t._v("index.html")]),t._v("可以查看文档。")])])])]),t._v(" "),s("h3",{attrs:{id:"api文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api文档"}},[t._v("#")]),t._v(" API文档")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("API")]),t._v(" ("),s("strong",[t._v("A")]),t._v("pplication "),s("strong",[t._v("P")]),t._v("rogramming "),s("strong",[t._v("I")]),t._v("nterface)：应用程序接口。Java提供的基本编程接口。\nJava提供大量的基础类，也提供了相应的API文档。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/457aa890890a4d04b82c5e254ef1bc56.png",alt:""}})])])]),t._v(" "),s("h3",{attrs:{id:"面试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试"}},[t._v("#")]),t._v(" 面试")]),t._v(" "),s("ul",[s("li",[t._v("Java语言的特点？")]),t._v(" "),s("li",[t._v("System.out.println() 和 System.out.print() 的区别？")]),t._v(" "),s("li",[t._v("一个.java 源文件中是否可以包括多个类(不是内部类)？有什么限制？")]),t._v(" "),s("li",[t._v("Something类的文件名叫Otherthing.java？")]),t._v(" "),s("li",[t._v("为什么要设置path？")]),t._v(" "),s("li",[t._v("JDK, JRE, JVM的关系？")]),t._v(" "),s("li",[t._v("源文件是否必须与类名相同？如果不是，那么什么情况下，必须相同？")]),t._v(" "),s("li",[t._v("Java的注释方式有哪几种，格式是什么？")]),t._v(" "),s("li",[t._v("GC是什么？为什么要有GC？")]),t._v(" "),s("li",[t._v("垃圾回收器的基本原理是什么？垃圾回收器可以马上回收内存吗？有什么办法主动通知虚拟机进行垃圾回收？")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://good-person.gitee.io/blog-bed/assets/JavaSE_1-%E5%85%A5%E9%97%A8_%E9%9D%A2%E8%AF%95%E7%AD%94%E6%A1%88.doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("答案"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_2-基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本语法"}},[t._v("#")]),t._v(" 2.基本语法")]),t._v(" "),s("h3",{attrs:{id:"main方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#main方法"}},[t._v("#")]),t._v(" main方法")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello.java")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("ol",[s("li",[s("p",[t._v("class 类名 { }\t表示一个类。")])]),t._v(" "),s("li",[s("p",[t._v("一个.java文件可以有多个类，但是只能有一个"),s("strong",[t._v("public")]),t._v("修饰的类。")])]),t._v(" "),s("li",[s("p",[t._v("运行程序的入口：main方法。（固定格式）")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不是这个格式的其他main方法，都不是程序的入口。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),s("h3",{attrs:{id:"关键字、保留字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键字、保留字"}},[t._v("#")]),t._v(" 关键字、保留字")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("关键字")]),t._v(" (keyword)：被Java语言赋予了特殊含义，用做专门用途的字符串。")]),t._v(" "),s("li",[s("strong",[t._v("保留字")]),t._v(" (reserved word)：现有Java版本尚未使用，但以后版本可能会作为关键字使用。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[s("code",[t._v("abstract")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("code",[t._v("continue")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("code",[t._v("for")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("code",[t._v("new")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("code",[t._v("switch")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("assert")])]),t._v("***")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("default")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("goto")])]),t._v("*")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("package")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("synchronized")])])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("boolean")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("do")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("if")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("private")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("this")])])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("break")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("double")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("implements")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("protected")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("throw")])])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("byte")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("else")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("import")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("public")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("throws")])])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("case")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("enum")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("instanceof")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("return")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("transient")])])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("catch")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("extends")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("int")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("short")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("try")])])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("char")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("final")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("interface")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("static")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("void")])])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("class")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("finally")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("long")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("strictfp")])]),t._v("**")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("volatile")])])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("const")])]),t._v("*")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("float")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("native")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("super")])])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[s("code",[t._v("while")])])])])])]),t._v(" "),s("blockquote",[s("p",[t._v("带"),s("code",[t._v("*")]),t._v("的为保留字，不带"),s("code",[t._v("*")]),t._v("的为关键字。")]),t._v(" "),s("p",[s("strong",[t._v("关键字中所有字母都为小写。")])])]),t._v(" "),s("h3",{attrs:{id:"标识符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[t._v("#")]),t._v(" 标识符")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("标识符")]),t._v("：Java 对"),s("strong",[t._v("变量")]),t._v("、"),s("strong",[t._v("方法")]),t._v("和"),s("strong",[t._v("类")]),t._v("等命名时，使用的字符序列称为标识符。")])]),t._v(" "),s("li",[s("p",[t._v("标识符的"),s("strong",[t._v("规则")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("26个"),s("strong",[t._v("英文字母大小写")]),t._v("、"),s("strong",[t._v("0到9")]),t._v("、"),s("strong",[t._v("_")]),t._v(" 、"),s("strong",[t._v("$")]),t._v(" 组成。")])]),t._v(" "),s("li",[s("p",[t._v("数字不能开头，不能包含空格。")])]),t._v(" "),s("li",[s("p",[t._v("不能使用关键字和保留字。")])]),t._v(" "),s("li",[s("p",[t._v("Java严格区分大小写，长度无限制。")])]),t._v(" "),s("li",[s("p",[t._v("可以使用汉字，但强烈不推荐使用 (包括汉字的拼音)。")])])])]),t._v(" "),s("li",[s("p",[t._v("命名规范 (遵循标识符)：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("包")]),t._v(" 名：所有字母小写")]),t._v(" "),s("li",[s("strong",[t._v("类")]),t._v("、"),s("strong",[t._v("接口")]),t._v(" 名：首字母大写")]),t._v(" "),s("li",[s("strong",[t._v("变量")]),t._v("、"),s("strong",[t._v("方法")]),t._v(" 名：首字母小写")]),t._v(" "),s("li",[s("strong",[t._v("常量")]),t._v(" 名：所有字母大写，且用**_**连接多个单词")])])])]),t._v(" "),s("h3",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("变量：用于在内存中保存数据，数据可以在同一数据类型范围内不断变化。")]),t._v(" "),s("ul",[s("li",[t._v("Java中的变量：必须先定义，后使用。")]),t._v(" "),s("li",[t._v("使用变量名来访问这块区域的数据。")]),t._v(" "),s("li",[t._v("变量的作用域：定义所在的{ }内，只有在其作用域内才有效，同作用域内不能定义同名的变量。")])])]),t._v(" "),s("li",[s("p",[t._v("变量的定义与赋值：")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("语法")])]),t._v(" "),s("p",[t._v("变量的定义(声明)："),s("code",[t._v("<数据类型> <变量名称>")])]),t._v(" "),s("p",[t._v("变量的赋值："),s("code",[t._v("<变量名称> = <值>")])]),t._v(" "),s("p",[t._v("变量的定义和赋值 (初始化)："),s("code",[t._v("<数据类型> `<变量名称> = <值>")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量的定义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量的赋值")]),t._v("\nnum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量的定义和赋值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("变量的分类：对于每一种数据都定义了具体的数据类型，在内存中分配了不同大小的内存空间。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/6ff5dd850aee4fb085bdeca6ddfb99ee.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/3127768ef53e44d288dc015a8fa8e8a9.png",alt:""}})])])]),t._v(" "),s("h3",{attrs:{id:"基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("整数类型：byte、short、int、long")])]),t._v(" "),s("ul",[s("li",[t._v("Java"),s("strong",[t._v("整型常量 默认：int")]),t._v("。"),s("strong",[t._v("默认值：0")]),t._v("。(long型常量必须后加"),s("strong",[t._v("l")]),t._v("或"),s("strong",[t._v("L")]),t._v("，默认值：0L)")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/6bc0e436d7804a2da8a2e4d6fc499bdb.png",alt:""}})])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("浮点类型：float、double")])]),t._v(" "),s("ul",[s("li",[t._v("Java"),s("strong",[t._v("浮点型常量默认：double")]),t._v("。"),s("strong",[t._v("默认值：0.0")]),t._v("。(float型常量必须后加"),s("strong",[t._v("f")]),t._v("或"),s("strong",[t._v("F")]),t._v("，默认值：0.0F)")]),t._v(" "),s("li",[t._v("表现形式：\n"),s("ul",[s("li",[t._v("十进制数 形式 (5.12 、0.251 、.256)")]),t._v(" "),s("li",[t._v("科学计数法 形式 (5.12e2 、515E2 、100E-2)")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/5c133e8a7a8f45598733ce7bef1e6619.png",alt:""}})])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("字符类型：char")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("char类型表示”字符“，"),s("strong",[t._v("占用2字节")]),t._v("，范围：0～65535，"),s("strong",[t._v("默认值：'u0000'")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("Java所有字符使用Unicode编码，所以一个字符可以存储一个字母、一个汉字、一个数字字符 等。")])]),t._v(" "),s("li",[s("p",[t._v("char类型是可以运算的，对应其Unicode码来运算。")])]),t._v(" "),s("li",[s("p",[t._v("表现形式：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("一对单引号括起来的单个字符")]),t._v("。(如：char c = 'A')")])]),t._v(" "),s("li",[s("p",[t._v("Java使用**转义字符"),s("code",[t._v("\\")]),t._v("**表示特殊字符。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("转义字符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\b")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("退格符")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\n")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("换行符")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\r")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("回车符")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\t")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("制表符")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v('\\"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("双引号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\'")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("单引号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\\\")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("反斜线")])])])])]),t._v(" "),s("li",[s("p",[t._v("直接使用 Unicode 值来表示字符型常量。(如：'\\u000a'表示'\\n'，\\后面是十六进制)")])])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("布尔类型：boolean")])]),t._v(" "),s("ul",[s("li",[t._v("boolean类型用来判断逻辑条件，只有 "),s("strong",[t._v("true")]),t._v(" 和 "),s("strong",[t._v("false")]),t._v("，"),s("strong",[t._v("默认值：false")]),t._v("。")]),t._v(" "),s("li",[t._v("Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达所操作的boolean值，在编译之后都使用java虚拟机中的int数据类型来代替：true用1表示，false用0表示。"),s("br"),t._v("\n但是boolean数组编译之后会使用byte数组来代替。")])])])]),t._v(" "),s("h3",{attrs:{id:"基本数据类型的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型的转换"}},[t._v("#")]),t._v(" 基本数据类型的转换")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("自动类型转换")]),t._v("：容量小的类型 自动转换为 容量大的类型。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/3c1338ceced24f3aad1e8739df28b5b1.png",alt:""}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("byte、short、char 之间不会相互转换")]),t._v("，计算时首先"),s("strong",[t._v("转换为int类型")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("boolean类型不能与其他基本数据类型运算")]),t._v("。")]),t._v(" "),s("li",[t._v("多种类型的数据混合运算时，Java首先会将所有数据转换为容量最大的数据类型，再运算。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("强制类型转换")]),t._v("：强制将 容量大的类型 转换为 容量小的类型，可能造成精度降低或溢出。")]),t._v(" "),s("ul",[s("li",[t._v("语法："),s("code",[t._v("(小类型)<大类型>")])]),t._v(" "),s("li",[t._v("boolean类型不能转换为其他基本数据类型。")])])])]),t._v(" "),s("h3",{attrs:{id:"进制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进制"}},[t._v("#")]),t._v(" 进制")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("整数")]),t._v("的表示方式：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("二进制")]),t._v("(binary)：0b 或 0B 开头。")]),t._v(" "),s("li",[s("strong",[t._v("八进制")]),t._v("(octal)：0 开头。")]),t._v(" "),s("li",[s("strong",[t._v("十进制")]),t._v("(decimal)")]),t._v(" "),s("li",[s("strong",[t._v("十六进制")]),t._v("(hex)：0x 或 0X 开头。(A-F不区分大小写)")])])]),t._v(" "),s("li",[s("p",[t._v("二进制整数的形式：")]),t._v(" "),s("ul",[s("li",[t._v("原码：一个二进制数，最高位是符号位 (整数0，负数1)。")]),t._v(" "),s("li",[t._v("反码：负数即符号位1时，符号位不变，原码按位取反。")]),t._v(" "),s("li",[t._v("补码：负数即符号位1时，符号位不变，反码+1。")])]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("strong",[t._v("正数：原码、反码、补码 都相同。")])]),t._v(" "),s("li",[t._v("计算机底层都以"),s("strong",[t._v("补码")]),t._v("的方式来存储数据。")])])])])]),t._v(" "),s("h3",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("p",[t._v("运算符是一种特殊的符号，用来表示数据的运算、赋值、比较等。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("算术")]),t._v("运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("+")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数字：正号、加；    字符串：连接")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("-")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("负号、减")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("*****")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("乘")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("/")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("除（整数除法只保留整数部分，舍弃小数部分）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("%")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("取摸(取余)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("**++**i")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("前置自增：先自增，后赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("**--**i")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("前置自减：先自减，后赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("i**++**")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("后置自增：先赋值，后自增")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("i**--**")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("后置自减：先赋值：后自减")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("赋值")]),t._v("运算符")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("=")]),t._v("：可以使用自动类型转换或使用强制类型转换原则进行处理。")])]),t._v(" "),s("li",[s("p",[t._v("扩展赋值运算符："),s("code",[t._v("+=")]),t._v("、"),s("code",[t._v("-=")]),t._v("、"),s("code",[t._v("*=")]),t._v("、"),s("code",[t._v("/=")]),t._v("、"),s("code",[t._v("%=")])])]),t._v(" "),s("li",[s("p",[t._v("注意："),s("strong",[s("code",[t._v("+=")]),t._v("等扩展运算符、 "),s("code",[t._v("++")]),t._v("i、i"),s("code",[t._v("++")]),t._v(" 等算术运算符：既可以实现运算，又不会改变数据类型")]),t._v("，"),s("br"),t._v("\n所以可能会发生溢出。")])]),t._v(" "),s("li",[s("p",[t._v("注意："),s("strong",[t._v("n += 1 等价于 n = n + 1")]),t._v("，"),s("code",[t._v("=")]),t._v("左边的变量要放在等价式的最左边。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果n为32")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\tn = n + (n++) + (++n)\n\tn = 10 + 10 + 12\t从左到右运算，n自增后，往右的n已加1了。\n\tn = 32\n */")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("比较")]),t._v("(关系)运算符")]),t._v(" "),s("ul",[s("li",[t._v("比较运算符的结果"),s("strong",[t._v("都是boolean型")]),t._v("。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("运算符")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("作用")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("==")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("等于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("!=")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("不等于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("<")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("小于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v(">")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("大于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("<=")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("小于或等于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v(">=")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("大于或等于")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("instanceof")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("对象 是否 类/子类的对象")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("逻辑")]),t._v("运算符")]),t._v(" "),s("ul",[s("li",[t._v("逻辑运算符的结果"),s("strong",[t._v("都是boolean型")]),t._v("。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("运算符")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("作用")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("&")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑与")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("&&")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("短路与")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("|")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑或")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("||")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("短路或")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("!")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑非")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("^")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑异或（相同false，不同true）")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("位")]),t._v("运算符")]),t._v(" "),s("ul",[s("li",[t._v("位运算是直接对整数的二进制进行的运算。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("运算符")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("作用")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("细节")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("<<")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("左移")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("空位补0，被移除的高位丢弃，空缺位补0。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v(">>")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("右移")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("被移位的二进制最高位是0，右移后，空缺位补0；最高位是1，空缺位补1。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v(">>>")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("无符号右移")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("被移位二进制最高位无论是0或者是1，空缺位都用0补。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("&")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("与运算")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("二进制位进行&运算，只有1&1时结果是1，否则是0。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("|")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("或运算")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("二进制位进行|运算，只有0|0时结果是0，否则是1。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("^")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("异或运算")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("相同二进制位进行 ^ 运算，结果是0；1^1=0 , 0^0=0；"),s("br"),t._v("不相同二进制位 ^ 运算结果是1。1^0=1 , 0^1=1。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("~")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("取反运算")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("符号位取反，各二进制码按补码各位取反。")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("三元")]),t._v("运算符")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 语法：")]),t._v("\n条件表达式 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("执行的表达式 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("执行的表达式\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行的表达式必须有返回且返回类型一致")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("运算符的"),s("strong",[t._v("优先级")]),t._v("：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("顺序(L：左，R：右)")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v(".    ()    {}    ;    ,")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("R —> L")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("++    --    ~    !    (类型)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("*    /    %")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("+    -")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("<<    >>    >>>")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("<    >    <=    >=    instanceof")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("==    !=")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("&")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("^")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("|")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("&&")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("L—>R")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("||")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("R —> L")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("?  :")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("R —> L")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("=    *=    /=    %=")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("+=    -=    <<=    >>=")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v(">>>=")]),t._v("    &=    ^=    |=")])])])])])]),t._v(" "),s("h3",{attrs:{id:"面试-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试-2"}},[t._v("#")]),t._v(" 面试")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" main "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"z="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li")]),t._v(" "),s("h2",{attrs:{id:"_3-程序流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-程序流程控制"}},[t._v("#")]),t._v(" 3.程序流程控制")]),t._v(" "),s("ul",[s("li",[t._v("三种基本流程结构：\n"),s("ul",[s("li",[t._v("顺序结构")]),t._v(" "),s("li",[t._v("分支结构")]),t._v(" "),s("li",[t._v("循环结构")])])])]),t._v(" "),s("h3",{attrs:{id:"顺序结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序结构"}},[t._v("#")]),t._v(" 顺序结构")]),t._v(" "),s("p",[t._v("程序从上到下逐行地执行，中间没有任何判断和跳转。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"分支结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支结构"}},[t._v("#")]),t._v(" 分支结构")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("if-else")]),t._v(" 结构")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("：执行代码块\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("：执行代码块"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("：执行代码块"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("：执行代码块"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("：执行代码块"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("：执行代码块"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("条件表达式：结果必须是boolean类型")]),t._v(" "),s("p",[t._v("多个条件，是从上到下，必经过 条件表达式1，条件表达式2，...... 到else。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("switch-case")]),t._v(" 结构")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 常量"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        语句"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 常量"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        语句"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 常量n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        语句n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        语句"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("ul",[s("li",[t._v("switch( 表达式 ) 的类型："),s("br"),t._v(" "),s("strong",[t._v("char")]),t._v("、"),s("strong",[t._v("byte")]),t._v("、"),s("strong",[t._v("short")]),t._v("、"),s("strong",[t._v("int")]),t._v("、"),s("strong",[t._v("Character")]),t._v("、"),s("strong",[t._v("Byte")]),t._v("、"),s("strong",[t._v("Short")]),t._v("、"),s("strong",[t._v("Integer")]),t._v("、"),s("strong",[t._v("enum")]),t._v("(jdk 5)、"),s("strong",[t._v("String")]),t._v("(jdk 7)。")]),t._v(" "),s("li",[t._v("case字句的值：必须是"),s("strong",[t._v("常量、互不相同、switch(表达式)的类型")]),t._v("，不能是变量或变量表达式。")]),t._v(" "),s("li",[t._v("break语句用来执行完一个case分支跳出switch语句块；如果没有break语句，程序会从匹配的case分支开始一直往下执行直到break语句或结尾。")]),t._v(" "),s("li",[t._v("default子句是可选的，位置任意。当没有匹配的case字句，会执行default分支。")]),t._v(" "),s("li",[s("strong",[t._v("switch本质上只支持int类型")]),t._v("，数字类型编译后：自动转换为int；枚举编译后：使用ordinal()方法返回int类型；字符串编译后：使用hashCode()方法返回int类型，case的语句使用equals()比较。")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 枚举 类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stauts")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    SUCCESS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    FIAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// switch使用枚举")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stauts")]),t._v(" stauts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stauts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SUCCESS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stauts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" SUCCESS"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"成功"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" FIAL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"失败"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("ul",[s("li",[s("p",[t._v("注意："),s("strong",[t._v("case值不需要写枚举类，直接写枚举对象名")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("使用 switch-case 的，都可以改写为 if-else，反之不成立。")])])])])])]),t._v(" "),s("h3",{attrs:{id:"循环结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环结构"}},[t._v("#")]),t._v(" 循环结构")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("循环结构：")]),t._v(" "),s("ul",[s("li",[t._v("初始化：可以定义多个变量，但必须同一类型，逗号分开。")]),t._v(" "),s("li",[t._v("循环条件：boolean表达式，true时进入循环，false退出循环。")]),t._v(" "),s("li",[t._v("迭代：可以多个变量更新，逗号分开。")]),t._v(" "),s("li",[t._v("循环体")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("for")]),t._v(" 循环")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("初始化"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 循环条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 迭代"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    循环体\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("可以只写循环体。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("while")]),t._v(" 循环")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("初始化\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("循环条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    循环体\n    迭代\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("循环条件不能写false，编译报错。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("do-while")]),t._v(" 循环")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("初始化\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    循环体\n    迭代\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("循环条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("至少执行一次循环体。")])])])]),t._v(" "),s("h3",{attrs:{id:"特殊流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊流程控制"}},[t._v("#")]),t._v(" 特殊流程控制")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("break")]),t._v("：终止某个语句块的执行。")]),t._v(" "),s("ul",[s("li",[t._v("循环："),s("strong",[t._v("跳出当前循环")]),t._v("。(不是跳出所有循环)")]),t._v(" "),s("li",[t._v("switch：退出某个case分支。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("continue")]),t._v("：跳过一次循环，继续下一次循环。")]),t._v(" "),s("ul",[s("li",[t._v("continue语句"),s("strong",[t._v("只能用于 循环结构")]),t._v("。")]),t._v(" "),s("li",[t._v("出现多层嵌套时，continue语句可以通过标签指明要跳过的是哪一层循环。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("return")]),t._v("：结束一个方法。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("break、continue、return 语句之后不能出现语句。")])]),t._v(" "),s("h3",{attrs:{id:"面试-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试-3"}},[t._v("#")]),t._v(" 面试")]),t._v(" "),s("h2",{attrs:{id:"_4-数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-数组"}},[t._v("#")]),t._v(" 4. 数组")]),t._v(" "),s("h3",{attrs:{id:"数组概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组概念"}},[t._v("#")]),t._v(" 数组概念")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("数组：多个"),s("strong",[t._v("相同类型数据")]),t._v("按一定顺序排列的集合，并通过编号的方式对这些数据进行统一管理。")])]),t._v(" "),s("li",[s("p",[t._v("数组"),s("strong",[t._v("本身")]),t._v("是"),s("strong",[t._v("引用数据类型")]),t._v("，数组的"),s("strong",[t._v("元素")]),t._v("可以是 "),s("strong",[t._v("基本数据类型 和 引用数据类型")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("创建数组对象会在内存开辟一整块连续的空间，数组名引用这块连续空间的首地址。")])]),t._v(" "),s("li",[s("p",[t._v("数组的"),s("strong",[t._v("长度")]),t._v("一旦确定，就"),s("strong",[t._v("不能修改")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("通过"),s("strong",[t._v("索引")]),t._v("(下标)的方式操作指定位置的元素，速度很快。")])]),t._v(" "),s("li",[s("p",[t._v("数组工具类："),s("code",[t._v("java.util.Arrays")])])]),t._v(" "),s("li",[s("p",[t._v("数组常见异常：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("java.lang.ArrayIndexOutOfBoundsException")]),t._v("：数组索引越界异常。")]),t._v(" "),s("li",[s("code",[t._v("java.lang.NullPointerException")]),t._v("：空指针异常。")])])])]),t._v(" "),s("h3",{attrs:{id:"一维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一维数组"}},[t._v("#")]),t._v(" 一维数组")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("定义(声明) 与 初始化")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("定义：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义：<元素类型>[] 变量名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" names"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组声明，不能指定长度，如：int nums[5];")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("初始化")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("静态初始化")]),t._v("：定义同时赋值。(定义和赋值不能分开)")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化有多少个元素，就确定长度为多少。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 简写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("动态初始化")]),t._v("：定义、赋值 分开。初始化必须在中括号写上 [长度]，确定长度后，数组每个元素都是该数据类型的默认值 (引用数据类型默认：null)。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" names"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnames "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnames"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnames"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C++"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])])]),t._v(" "),s("li",[s("p",[t._v("使用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("获取元素："),s("strong",[t._v("数组名[索引]")]),t._v("，[ ]里：int类型 常量或表达式。")])]),t._v(" "),s("li",[s("p",[t._v("数组元素的"),s("strong",[t._v("索引：从0开始 到 数组长度-1")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("数组的"),s("strong",[t._v("长度：属性length")]),t._v(" (int类型)。初始化一旦确定，"),s("strong",[t._v("长度不可变")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取元素")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 元素赋值")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取长度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"多维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多维数组"}},[t._v("#")]),t._v(" 多维数组")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("初始化")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("静态初始化")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 简写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("动态初始化")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义一个二维数组，有3个长度为2的二维数组。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二维数组初始化只指定一维数组的长度，一维元素全部为null。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非法")]),t._v("\n")])])])])]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("特殊写法："),s("strong",[t._v("int[] x, y[];        // x是一维数组，y是二维数组。")])]),t._v(" "),s("li",[t._v("Java中多维数组不必都是规则矩阵形式。")])])])]),t._v(" "),s("li",[s("p",[t._v("使用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("获取元素：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])])])])]),t._v(" "),s("p",[t._v("// 一维元素：数组名[一维索引]；\t\nint[] e = arr[0];")]),t._v(" "),s("pre",[s("code",[t._v("// 二维元素：数组名[一维索引][二维索引]\t\nint ee = arr[0][1];\n```\n")])]),t._v(" "),s("h3",{attrs:{id:"十大内部排序算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十大内部排序算法"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://good-person.gitee.io/blog-bed/assets/JavaSE_4-%E6%95%B0%E7%BB%84_%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("十大内部排序算法"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("插入排序")]),t._v(" "),s("li",[t._v("希尔排序")]),t._v(" "),s("li",[t._v("选择排序")]),t._v(" "),s("li",[t._v("堆排序")]),t._v(" "),s("li",[t._v("冒泡排序")]),t._v(" "),s("li",[t._v("快速排序")]),t._v(" "),s("li",[t._v("归并排序")]),t._v(" "),s("li",[t._v("计数排序")]),t._v(" "),s("li",[t._v("桶排序")]),t._v(" "),s("li",[t._v("基数排序")])]),t._v(" "),s("h3",{attrs:{id:"面试-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试-4"}},[t._v("#")]),t._v(" 面试")]),t._v(" "),s("ul",[s("li",[t._v("创建一个长度为6的int型数组，要求数组元素的值都在1-30之间，且是随机赋值。同时，要求元素的值各不相同。")])]),t._v(" "),s("h2",{attrs:{id:"_5-面向对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-面向对象"}},[t._v("#")]),t._v(" 5. 面向对象")]),t._v(" "),s("h3",{attrs:{id:"思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思想"}},[t._v("#")]),t._v(" 思想")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("面向对象")]),t._v("：将工程封装进对象，强调具备了功能得对象，以类/对象为最小单位，考虑谁来做。")]),t._v(" "),s("blockquote",[s("p",[t._v("面向对象："),s("strong",[t._v("OOP")]),t._v(" ("),s("strong",[t._v("O")]),t._v("bject "),s("strong",[t._v("O")]),t._v("riented "),s("strong",[t._v("P")]),t._v("rogramming)")])])]),t._v(" "),s("li",[s("p",[t._v("三大特性：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("封装")])]),t._v(" "),s("li",[s("strong",[t._v("继承")])]),t._v(" "),s("li",[s("strong",[t._v("多态")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/170e7690abdd4f40b6a5f4063313e019.png",alt:""}})])])]),t._v(" "),s("h3",{attrs:{id:"类、对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类、对象"}},[t._v("#")]),t._v(" 类、对象")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("类与对象：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("类 (Class)")]),t._v("：对一类事物的描述，是抽象的、概念上的定义。")]),t._v(" "),s("li",[s("strong",[t._v("对象 (Object)")]),t._v("：实际存在的该类事物的每个个体，因而也称为实例(instance)。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("类的成员")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("属性")]),t._v("：类中的成员变量 (准确来说，成员变量是字段。属性是对应字段的getter方法或setter方法)。")]),t._v(" "),s("li",[s("strong",[t._v("行为")]),t._v("：类中的成员方法。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("类")]),t._v("的语法：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("修饰符"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 类名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    成员变量\n    成员方法\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 人 类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成员变量：姓名")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成员方法：工作")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 工作中..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("对象")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("创建："),s("code",[t._v("类名 对象名 = new 类名();")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果对象的成员变量未初始化，会用默认值来初始化。")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("如果创建了一个类的多个对象，对于对象的属性，每个对象都拥有各自的一套副本，且互不干扰。")])])]),t._v(" "),s("li",[s("p",[t._v("使用："),s("code",[t._v("对象名.对象成员;")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取对象的成员变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象的成员变量赋值")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hao"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用对象的成员方法")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("匿名对象")]),t._v("：不将对象的引用地址赋值给一个变量。(就是这个对象没有对象名，没有变量引用)")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doWork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("匿名对象只能使用一次。")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("h3",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")])])}),[],!1,null,null,null);a.default=e.exports}}]);