(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{214:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[s._v("#")]),s._v(" Redis")]),s._v(" "),t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),t("h2",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),t("p",[s._v("Redis 五大数据类型：")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("string")]),s._v("：字符串")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("list")]),s._v("：列表。list类型是 "),t("strong",[s._v("字符串链表")]),s._v("，链表操作元素，头尾效率高，中间效率低。")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("v1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// value记录顺序，可以相同。")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("zet")]),s._v("：集合")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("v1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// value没有顺序，自动排同，value各不相同。")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("hash")]),s._v("：哈希表(类似Map)")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tkey"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tk1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" v1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\tk2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" v2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\tk3"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" v3\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("zset")]),s._v("：有序集合。在set的基础上，加上一个score值。score表示分数，用于排序。")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tkey"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\ts1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" v1\n\t\ts2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" v2\n\t\ts3"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" v3\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// s1,s2,s3...表示score(分数)")]),s._v("\n")])])])])]),s._v(" "),t("p",[s._v("Redis数据类型的操作命令："),t("a",{attrs:{href:"http://redisdoc.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://redisdoc.com/"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"配置文件-常用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置文件-常用"}},[s._v("#")]),s._v(" 配置文件(常用)")]),s._v(" "),t("h3",{attrs:{id:"位置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#位置"}},[s._v("#")]),s._v(" 位置")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Redis安装包解压后的目录，自带：redis.conf 就是配置文件。拷贝一份到自定义目录(比如 /redis)。")])]),s._v(" "),t("li",[t("p",[s._v("如果不在配置文件修改，在客户端设置配置：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取配置")]),s._v("\nconfig get "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("配置名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置配置")]),s._v("\nconfig "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("配置名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("配置值"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),t("p",[t("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/Redis/config_location.png",alt:""}})])])]),s._v(" "),t("h3",{attrs:{id:"单位"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单位"}},[s._v("#")]),s._v(" 单位")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("配置大小单位,开头定义了一些基本的度量单位，只支持bytes，不支持bit。")])]),s._v(" "),t("li",[t("p",[s._v("对大小写不敏感。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/Redis/config_units.png",alt:""}})])])]),s._v(" "),t("h3",{attrs:{id:"includes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[s._v("#")]),s._v(" INCLUDES")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("包含其他配置文件，相当于 redis.conf 是主配置文件。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("include /path/to/other.conf\n")])])])])]),s._v(" "),t("h3",{attrs:{id:"general"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[s._v("#")]),s._v(" GENERAL")]),s._v(" "),t("p",[s._v("通用配置")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("daemonize")]),s._v("：以守护进程的方式启动Redis。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认no，改为yes以守护进程启动。")]),s._v("\ndaemonize no\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("pidfile")]),s._v("：当Redis以守护进程方式启动，会把进程写入这个文件。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\npidfile /var/run/redis.pid\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("port")]),s._v("：端口。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nport "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("tcp-backlog")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\ntcp-backlog "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("511")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置tcp的backlog，backlog其实是一个连接队列，backlog队列总和 = 未完成三次握手队列 + 已经完成三次握手队列。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在高并发环境下你需要一个高backlog值来避免慢客户端连接问题。注意Linux内核会将这个值减小到/proc/sys/net/core/somaxconn的值，所以需要确认增大somaxconn和tcp_max_syn_backlog两个值来达到想要的效果。")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("bind")]),s._v("：绑定的主机地址。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bind 127.0.0.1")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("timeout")]),s._v("：当客户端闲置多长时间关闭连接。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认0，表示关闭该功能。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("tcp-keepalive")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认0，不使用。")]),s._v("\ntcp-keepalive "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 单位是秒，表示将周期性的使用SO_KEEPALIVE检测客户端是否还处于健康状态，避免服务器一直阻塞，官方给出的建议值是300秒。")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("loglevel")]),s._v("：指定日志记录级别。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis支持四个级别：debug，verbose，notice，warning。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nloglevel notice\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("logfile")]),s._v("：指定记录日志的文件。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 默认""，日志打印到标志输出。')]),s._v("\nlogfile "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("syslog-enabled")]),s._v("：是否把日志记录到系统日志。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# syslog-enabled no")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("syslog-ident")]),s._v("：设置系统日志的标识符")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# syslog-ident redis")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("syslog-facility")]),s._v("：指定syslog设备(facility)，必须是user 或 local0 到 local7。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# syslog-facility local0")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("databases")]),s._v("：设置数据库的数量。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认，Redis启动默认选择0号库。")]),s._v("\ndatabases "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("\n")])])])])]),s._v(" "),t("h3",{attrs:{id:"snapshotting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#snapshotting"}},[s._v("#")]),s._v(" SNAPSHOTTING")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("RDB")]),s._v(" 持久化方式，整个内存的压缩过的快照，RDB的数据结构，可以配置复合的快照触发条件。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 命令格式")]),s._v("\nsave "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("秒"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("写操作次数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 禁用")]),s._v("\nsave "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nsave "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("900")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 15分钟，写1次")]),s._v("\nsave "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5分支，写10次")]),s._v("\nsave "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1分支，写1000次")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("stop-writes-on-bgsave-error")]),s._v("：后台RDB持久化出错时停止客户端的写入操作。如果配置成no，表示不在乎数据不一致或者有其他的手段发现和控制。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nstop-writes-on-bgsave-error "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("rdbcompression")]),s._v("：对于存储到磁盘中的快照，可以设置是否进行压缩存储。如果是的话，redis会采用\nLZF算法进行压缩。如果你不想消耗CPU来进行压缩的话，可以设置为关闭此功能。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nrdbcompression "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("rdbchecksum")]),s._v("：在存储快照后，还可以让redis使用CRC64算法来进行数据校验，但是这样做会增加大约10%的性能消耗，如果希望获取到最大的性能提升，可以关闭此功能。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nrdbchecksum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("dbfilename")]),s._v("：RDB文件名。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\ndbfilename dump.rdb\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("dir")]),s._v("：RDB存储文件的目录。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),s._v(" ./\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意: 设置为./ 表示redis-server 配置文件 在哪个目录执行，RDB存储文件就在这个目录")]),s._v("\n")])])])])]),s._v(" "),t("h3",{attrs:{id:"replication"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#replication"}},[s._v("#")]),s._v(" REPLICATION")]),s._v(" "),t("ul",[t("li",[s._v("主从复制")])]),s._v(" "),t("h3",{attrs:{id:"security"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#security"}},[s._v("#")]),s._v(" SECURITY")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("requirepass")]),s._v('：登录Redis的密码，默认为""。')]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置密码")]),s._v("\nrequirepass "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("密码"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置密码完成后，重启Redis，第一次操作需要认证：auth <密码>")]),s._v("\n")])])]),t("p",[t("img",{attrs:{src:"https://good-person.gitee.io/blog-bed/Redis/config_auth.png",alt:""}})])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("rename-command")]),s._v("：把危险的命令给修改成其他名称。")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如CONFIG命令可以重命名为一个很难被猜到的命令，这样用户不能使用，而内部工具还能接着使用。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置成一个空的值，可以禁止一个命令")]),s._v("\nrename-command CONFIG "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n")])])])])]),s._v(" "),t("h3",{attrs:{id:"limits"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limits"}},[s._v("#")]),s._v(" LIMITS")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("maxclients")]),s._v("：设置redis同时可以与多少个客户端进行连接，默认情况下为10000个客户端。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nmaxclients "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 由于redis不区分连接是客户端连接还是内部打开文件或者和slave连接等，所以maxclients最小建议设置到32。如果超过了maxclients，redis会给新的连接发送 "max number of clients reached"，并关闭连接。')]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("maxmemory")]),s._v("：设置redis可以使用的内存量。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("maxmemory "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一旦到达内存使用上限，redis将会试图移除内部数据，移除规则可以通过maxmemory-policy来指定。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果redis无法根据移除规则来移除内存中的数据，或者设置了“不允许移除”，那么redis则会针对那些需要申请内存的指令返回错误信息，比如SET、LPUSH等。但是对于无内存申请的指令，仍然会正常响应，比如GET等。如果你的redis是主redis（说明你的redis有从redis），那么在设置内存使用上限时，需要在系统中留出一些内存空间给同步队列缓存，只有在你设置的是“不移除”的情况下，才不用考虑这个因素。注意slave的输出缓冲区是不计算在maxmemory内的。所以为了防止主机内存使用完，建议设置的maxmemory需要更小一些。")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("maxmemory-policy")]),s._v("：内存容量超过maxmemory后的处理策略。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("volatile-lru")]),s._v("：使用LRU算法移除key，只对设置了过期时间的键。")]),s._v(" "),t("li",[t("strong",[s._v("allkeys-lru")]),s._v("：使用LRU算法移除key。")]),s._v(" "),t("li",[t("strong",[s._v("volatile-random")]),s._v("：在过期集合中移除随机的key，只对设置了过期时间的键。")]),s._v(" "),t("li",[t("strong",[s._v("allkeys-random")]),s._v("：移除随机的key。")]),s._v(" "),t("li",[t("strong",[s._v("volatile-ttl")]),s._v("：移除那些TTL值最小的key，即那些最近要过期的key。")]),s._v(" "),t("li",[t("strong",[s._v("noeviction")]),s._v("：不进行移除。针对写操作，只是返回错误信息。")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nmaxmemory-policy noeviction\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("maxmemory-samples")]),s._v("：设置样本数量。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nmaxmemory-samples "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#LRU算法和最小TTL算法都并非是精确的算法，而是估算值，所以你可以设置样本的大小，redis默认随机抽取这么多个key并选择其中最合适的那个,然后移除。")]),s._v("\n")])])])])]),s._v(" "),t("h3",{attrs:{id:"append-only-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#append-only-mode"}},[s._v("#")]),s._v(" APPEND ONLY MODE")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("appendonly")]),s._v("：默认redis使用的是rdb方式持久化，这种方式在许多应用中已经足够用了。但是redis如果中途宕机，会导致可能有几分钟的数据丢失，根据save来策略进行持久化，Append Only File是另一种持久化方式，可以提供更好的持久化特性。Redis会把每次写入的数据在接收后都写入 appendonly.aof 文件，每次启动时Redis都会先把这个文件的数据读入内存里，先忽略RDB文件。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nappendonly no\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("appendfilename")]),s._v("：AOF文件名。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nappendfilename "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"appendonly.aof"')]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("appendfsync")]),s._v("：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("always")]),s._v("：同步持久化，每次发生数据变更会被立即记录到磁盘 ，性能较差但数据完整性比较好。")]),s._v(" "),t("li",[t("strong",[s._v("everysec")]),s._v("：异步操作，每秒记录。如果一秒内宕机，就会丢失这一秒的数据。")]),s._v(" "),t("li",[t("strong",[s._v("no")]),s._v("：不主动调用fsync，一切依赖操作系统的调度。大多数Linux操作系统，是每30秒进行一次fsync，将缓冲区中的数据写到磁盘上。")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nappendfsync everysec\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("no-appendfsync-on-rewrite")]),s._v("："),t("strong",[s._v("AOF重写")]),s._v("时是否可以运用Appendfsync。用默认no即可，")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认no，保证数据安全性。")]),s._v("\nno-appendfsync-on-rewrite no\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("auto-aof-rewrite-percentage")]),s._v("：当目前AOF文件大小超过上一次重写的AOF文件大小的百分比进行重写。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\nauto-aof-rewrite-percentage "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("auto-aof-rewrite-min-size")]),s._v("：允许重写的最小aof文件大小。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认64mb，太小，建议设置为5gb。")]),s._v("\nauto-aof-rewrite-min-size 64mb\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("aof-load-truncated")]),s._v("：当Redis启动，加载AOF文件，当AOF文件尾部不完整的处理。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yes：发现尾部不正确时，自动截断，加载前面正确的数据。会向客户端写入log，并继续运行。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# no：Redis启动失败，用户必须手动redis-check-aof修复AOF文件才可以。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认")]),s._v("\naof-load-truncated "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n")])])])])]),s._v(" "),t("h2",{attrs:{id:"持久化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#持久化"}},[s._v("#")]),s._v(" 持久化")]),s._v(" "),t("h2",{attrs:{id:"事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[s._v("#")]),s._v(" 事务")]),s._v(" "),t("h2",{attrs:{id:"订阅-发布"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#订阅-发布"}},[s._v("#")]),s._v(" 订阅 / 发布")]),s._v(" "),t("h2",{attrs:{id:"主从复制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主从复制"}},[s._v("#")]),s._v(" 主从复制")]),s._v(" "),t("h2",{attrs:{id:"jedis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jedis"}},[s._v("#")]),s._v(" Jedis")])])}),[],!1,null,null,null);a.default=n.exports}}]);